{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Categoria } from 'src/app/models/categoria/categoria';\nimport { ControleCaixa } from 'src/app/models/controle-caixa/controle-caixa';\nimport { Paciente } from 'src/app/models/paciente';\nlet CadastrarControleCaixaComponent = class CadastrarControleCaixaComponent {\n  constructor(serviceConsulta, rotaAtiva, rota, toastr, pacienteService, controleCaixaService, categoriaService) {\n    this.serviceConsulta = serviceConsulta;\n    this.rotaAtiva = rotaAtiva;\n    this.rota = rota;\n    this.toastr = toastr;\n    this.pacienteService = pacienteService;\n    this.controleCaixaService = controleCaixaService;\n    this.categoriaService = categoriaService;\n    this.sucessMessage = \"\";\n    this.exibirMensagem = false;\n    this.agendamentos = [];\n    this.formasDePagamento = [\"Dinheiro\", \"Cartão de Crédito\", \"Cartão de Débito\", \"PIX\"];\n    this.pacientes = [];\n    this.contas = [];\n    this.categorias = [];\n    this.consulatId = 0;\n    this.valorLancamentoFuturo = '';\n    this.selectedAgendamentoId = 0;\n    this.selectedPatientId = '';\n    this.tiposDeConsulta = ['Presencial', 'Online'];\n    this.controleCaixa = {\n      paciente: new Paciente(),\n      conta: [],\n      data: new Date(),\n      produtoOuCliente: '',\n      preco: 0,\n      formaPagamento: '',\n      categoria: new Categoria()\n    };\n    this.categoria = {\n      idCategoria: 0,\n      descricao: '',\n      tipoCategoria: '',\n      controle: new ControleCaixa()\n    };\n    this.paciente = {\n      idPaciente: undefined,\n      cpf: '',\n      nomePaciente: '',\n      dataNascimentoPaciente: new Date(),\n      idadePaciente: 0,\n      cidade: '',\n      estado: '',\n      telefone: ''\n    };\n    this.agenda = {\n      idAgendamento: 0,\n      paciente: new Paciente(),\n      dataInicio: new Date(),\n      descricao: '',\n      horarioInicio: new Date(),\n      horaFinal: new Date(),\n      observacao: ''\n    };\n  }\n  ngOnInit() {\n    this.rotaAtiva.params.subscribe(params => {\n      this.consulatId = +params['id'];\n    });\n    this.listarPacientes();\n  }\n  addControle(form) {\n    if (form.valid) {\n      this.controleCaixaService.cadastrarControleCaixaAConta(this.controleCaixa).subscribe(response => {\n        this.sucessMessage = \"Controle Cadastrado!\";\n        this.exibirMensagem = true;\n        console.log(this.controleCaixa);\n        // this.controleCaixa.conta = [];\n        setTimeout(() => {\n          this.toastr.success(this.sucessMessage, 'Sucesso');\n          this.rota.navigate(['controles']);\n        }, 2000);\n      });\n    } else {\n      console.log();\n    }\n  }\n  listarPacientes() {\n    this.pacienteService.getPaciente().subscribe(pacientes => {\n      this.pacientes = pacientes;\n    });\n  }\n  listarCategorias() {\n    this.categoria;\n  }\n  // addConsulta(form: NgForm): void {\n  //   console.log(this.exibirMensagem)\n  //   console.log(this.consulta.idConsulta)\n  //   console.log(this.consulta)\n  //   if (form.valid) {\n  //     this.serviceConsulta.cadastrarConsulta(this.consulta).subscribe(response => {\n  //       this.sucessMessage = \"Consulta Cadastrado!\";\n  //       this.exibirMensagem = true;\n  //       console.log(response);\n  //       console.log(this.consulta);\n  //       console.log(this.exibirMensagem);\n  //       setTimeout(() => {\n  //         this.toastr.success(this.sucessMessage, 'Sucesso');\n  //         this.rota.navigate(['consultas']);\n  //       }, 2000)\n  //     });\n  //   }\n  //   else {\n  //     console.log()\n  //   }\n  // }\n  buscarDetalhesDoPaciente(cpf) {\n    console.log(this.pacienteService.getPacientePorCPF(cpf));\n    this.pacienteService.getPacientePorCPF(cpf).subscribe(paciente => {\n      if (paciente) {\n        this.paciente.idPaciente = paciente.idPaciente;\n        this.paciente.cpf = paciente.cpf;\n        this.paciente.nomePaciente = paciente.nomePaciente;\n        this.paciente.dataNascimentoPaciente = paciente.dataNascimentoPaciente;\n        this.paciente.idadePaciente = paciente.idadePaciente;\n        this.paciente.cidade = paciente.cidade;\n        this.paciente.estado = paciente.estado;\n        this.paciente.telefone = paciente.telefone;\n        this.controleCaixa.paciente = paciente;\n        console.log(this.controleCaixa);\n        this.selectedPatientId = cpf;\n      }\n    });\n  }\n  voltarPagina() {\n    this.rota.navigate(['controles']);\n  }\n};\n__decorate([ViewChild('controleForm')], CadastrarControleCaixaComponent.prototype, \"controleForm\", void 0);\nCadastrarControleCaixaComponent = __decorate([Component({\n  selector: 'app-cadastrar-controle-caixa',\n  templateUrl: './cadastrar-controle-caixa.component.html',\n  styleUrls: ['./cadastrar-controle-caixa.component.scss']\n})], CadastrarControleCaixaComponent);\nexport { CadastrarControleCaixaComponent };","map":{"version":3,"names":["Component","ViewChild","Categoria","ControleCaixa","Paciente","CadastrarControleCaixaComponent","constructor","serviceConsulta","rotaAtiva","rota","toastr","pacienteService","controleCaixaService","categoriaService","sucessMessage","exibirMensagem","agendamentos","formasDePagamento","pacientes","contas","categorias","consulatId","valorLancamentoFuturo","selectedAgendamentoId","selectedPatientId","tiposDeConsulta","controleCaixa","paciente","conta","data","Date","produtoOuCliente","preco","formaPagamento","categoria","idCategoria","descricao","tipoCategoria","controle","idPaciente","undefined","cpf","nomePaciente","dataNascimentoPaciente","idadePaciente","cidade","estado","telefone","agenda","idAgendamento","dataInicio","horarioInicio","horaFinal","observacao","ngOnInit","params","subscribe","listarPacientes","addControle","form","valid","cadastrarControleCaixaAConta","response","console","log","setTimeout","success","navigate","getPaciente","listarCategorias","buscarDetalhesDoPaciente","getPacientePorCPF","voltarPagina","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\welli\\front_pfmjg\\pfmjg\\src\\app\\module\\pages\\controle-caixa\\cadastrar-controle-caixa\\cadastrar-controle-caixa.component.ts"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Agendamento } from 'src/app/models/agendamento/agendamento';\nimport { Categoria } from 'src/app/models/categoria/categoria';\nimport { Consulta } from 'src/app/models/consulta/consulta';\nimport { Conta } from 'src/app/models/conta/conta';\nimport { ControleCaixa } from 'src/app/models/controle-caixa/controle-caixa';\nimport { Paciente } from 'src/app/models/paciente';\nimport { ContaService } from 'src/app/services/conta.service';\nimport { ControleCaixaService } from 'src/app/services/controle-caixa.service';\nimport { ServiceAgendamento } from 'src/app/services/service-agendamento.service';\nimport { ServiceConsulta } from 'src/app/services/service-consulta.service';\nimport { ServicePaciente } from 'src/app/services/service-paciente.service';\n\n@Component({\n  selector: 'app-cadastrar-controle-caixa',\n  templateUrl: './cadastrar-controle-caixa.component.html',\n  styleUrls: ['./cadastrar-controle-caixa.component.scss']\n})\nexport class CadastrarControleCaixaComponent {\n\n  @ViewChild('controleForm') controleForm!: NgForm;\n\n  sucessMessage: string = \"\";\n\n  exibirMensagem: boolean = false;\n\n  agendamentos: Agendamento[] = [];\n\n  formasDePagamento: string[] = [\"Dinheiro\", \"Cartão de Crédito\", \"Cartão de Débito\", \"PIX\"];\n\n  pacientes: Paciente[] = [];\n\n  contas: Conta[] = [];\n\n  categorias: Categoria[] = [];\n\n  consulatId: number = 0;\n\n  valorLancamentoFuturo: string = '';\n\n  selectedAgendamentoId: number = 0;\n\n  selectedPatientId: string = '';\n\n  tiposDeConsulta: string[] = ['Presencial', 'Online'];\n\n  controleCaixa: ControleCaixa = {\n    \n    paciente: new Paciente,\n    conta: [],\n    data: new Date,\n    produtoOuCliente: '',\n    preco: 0,\n    formaPagamento: '',\n    categoria: new Categoria \n    \n  };\n\n  categoria: Categoria = {\n\n    idCategoria: 0,\n    descricao: '',\n    tipoCategoria: '',\n    controle: new ControleCaixa\n\n  }\n\n  paciente: Paciente = {\n    idPaciente: undefined,\n    cpf: '',\n    nomePaciente: '',\n    dataNascimentoPaciente: new Date(),\n    idadePaciente: 0,\n    cidade: '',\n    estado: '',\n    telefone: ''\n  };\n\n  agenda: Agendamento = {\n    idAgendamento: 0, // ou 0, se preferir\n    paciente: new Paciente,\n    dataInicio: new Date(), // ou outra data padrão\n    descricao: '', // string vazia\n    horarioInicio: new Date(), // ou outra data padrão\n    horaFinal: new Date(), // ou outra data padrão\n    observacao: '',\n  }\n\n  constructor(private serviceConsulta: ServiceConsulta, private rotaAtiva: ActivatedRoute,\n    private rota: Router, private toastr: ToastrService, private pacienteService: ServicePaciente,\n    private controleCaixaService: ControleCaixaService,\n    private categoriaService: ) {\n\n  }\n\n  ngOnInit(): void {\n    this.rotaAtiva.params.subscribe(params => {\n      this.consulatId = +params['id'];\n    })\n    this.listarPacientes();\n  }\n\n  addControle(form: NgForm) {\n    if (form.valid) {\n          this.controleCaixaService.cadastrarControleCaixaAConta(this.controleCaixa).subscribe(response => {\n            this.sucessMessage = \"Controle Cadastrado!\";\n            this.exibirMensagem = true;\n            console.log(this.controleCaixa)\n            // this.controleCaixa.conta = [];\n            setTimeout(() => {\n              this.toastr.success(this.sucessMessage, 'Sucesso');\n              this.rota.navigate(['controles']);\n            }, 2000)\n          });\n        }\n        else {\n          console.log()\n        }\n  }\n\n  listarPacientes() {\n    this.pacienteService.getPaciente().subscribe(pacientes => {\n      this.pacientes = pacientes;\n    });\n  }\n\n  listarCategorias() {\n    this.categoria\n  }\n  // addConsulta(form: NgForm): void {\n  //   console.log(this.exibirMensagem)\n  //   console.log(this.consulta.idConsulta)\n  //   console.log(this.consulta)\n  //   if (form.valid) {\n  //     this.serviceConsulta.cadastrarConsulta(this.consulta).subscribe(response => {\n  //       this.sucessMessage = \"Consulta Cadastrado!\";\n  //       this.exibirMensagem = true;\n  //       console.log(response);\n  //       console.log(this.consulta);\n  //       console.log(this.exibirMensagem);\n  //       setTimeout(() => {\n  //         this.toastr.success(this.sucessMessage, 'Sucesso');\n  //         this.rota.navigate(['consultas']);\n  //       }, 2000)\n  //     });\n  //   }\n  //   else {\n  //     console.log()\n  //   }\n  // }\n\n  buscarDetalhesDoPaciente(cpf: string): void {\n    console.log(this.pacienteService.getPacientePorCPF(cpf));\n    this.pacienteService.getPacientePorCPF(cpf).subscribe((paciente) => {\n      if (paciente) {\n        this.paciente.idPaciente = paciente.idPaciente;\n        this.paciente.cpf = paciente.cpf;\n        this.paciente.nomePaciente = paciente.nomePaciente;\n        this.paciente.dataNascimentoPaciente = paciente.dataNascimentoPaciente;\n        this.paciente.idadePaciente = paciente.idadePaciente;\n        this.paciente.cidade = paciente.cidade;\n        this.paciente.estado = paciente.estado;\n        this.paciente.telefone = paciente.telefone;\n        this.controleCaixa.paciente = paciente;\n\n        console.log(this.controleCaixa)\n\n        this.selectedPatientId = cpf;\n      }\n    });\n  }\n\n  voltarPagina(): void {\n    this.rota.navigate(['controles'])\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}