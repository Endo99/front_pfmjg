{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HomeNutricionistaComponent = class HomeNutricionistaComponent {\n  ngOnInit() {\n    this.listarControles();\n    this.listarPacientes();\n  }\n  constructor(router, route, renderer, toastr, serviceNutricionista, pacienteService) {\n    this.router = router;\n    this.route = route;\n    this.renderer = renderer;\n    this.toastr = toastr;\n    this.serviceNutricionista = serviceNutricionista;\n    this.pacienteService = pacienteService;\n    this.isClick = false;\n    this.exibirPopupExclusao = false;\n    this.sucessMessage = \"\";\n    this.exibirMensagem = false;\n    this.controleSelecionado = null;\n    this.pacientes = [];\n    this.contas = [];\n    this.categorias = [];\n    this.controles = [];\n    this.controle = {\n      id: 0,\n      nome: '',\n      cpf: '',\n      telefone: '',\n      situacao: '',\n      descricao: ''\n    };\n    this.pages = [{\n      nome: \"Home\",\n      rota: \"\"\n    }, {\n      nome: \"Agenda\",\n      rota: \"/agendamentos\"\n    }, {\n      nome: \"Consulta\",\n      rota: \"/consultas\"\n    }, {\n      nome: \"Nutricionista\",\n      rota: \"\"\n    }, {\n      nome: \"Categoria\",\n      rota: \"/categorias\"\n    }, {\n      nome: \"Paciente\",\n      rota: \"/pacientes\"\n    }\n    // Adicione outras páginas conforme necessário\n    ];\n  }\n\n  direcionarPagina(pagina) {\n    // Encontre a página correspondente no array de páginas\n    const paginaEncontrada = this.pages.find(p => p.nome.toLowerCase() === pagina.toLowerCase());\n    if (paginaEncontrada) {\n      console.log(\"Entrou e clicou\");\n      // Redirecione para a rota correspondente\n      this.router.navigate([paginaEncontrada.rota]);\n    }\n  }\n  clicarMenuBento() {\n    this.isClick = !this.isClick;\n  }\n  listarControles() {\n    this.serviceNutricionista.listarNutricionista().subscribe(data => {\n      this.controles = data;\n    });\n  }\n  listarPacientes() {\n    this.pacienteService.getPaciente().subscribe(pacientes => {\n      this.pacientes = pacientes;\n    });\n  }\n  excluirControle() {\n    if (this.controleSelecionado && this.controleSelecionado.id) {\n      const idControle = this.controleSelecionado.id;\n      this.serviceNutricionista.deletarNutricionista(idControle).subscribe(() => {\n        this.sucessMessage = \"Consulta Excluído!\";\n        this.exibirMensagem = true;\n        setTimeout(() => {\n          this.toastr.success(this.sucessMessage, 'Sucesso');\n          this.router.navigate(['consultas']);\n        }, 2000);\n        this.listarControles();\n        this.controleSelecionado = null;\n        this.exibirPopupExclusao = false;\n      });\n    } else {\n      console.log(\"Não encontrado ou erro\");\n    }\n  }\n  selecionarControle(nutricionista) {\n    this.controleSelecionado = nutricionista;\n  }\n  openPopup(controle) {\n    console.log(\"Clicou\");\n    console.log(this.selectedControle = controle);\n    this.selectedControle = controle;\n  }\n  closePopup() {\n    this.selectedControle = null;\n    this.router.navigate(['/consultas']);\n  }\n  voltarPagina() {\n    this.router.navigate(['consultas']);\n  }\n};\nHomeNutricionistaComponent = __decorate([Component({\n  selector: 'app-home-controle-caixa',\n  templateUrl: './home-nutricionista.component.html',\n  styleUrls: ['./home-nutricionista.component.scss']\n})], HomeNutricionistaComponent);\nexport { HomeNutricionistaComponent };","map":{"version":3,"names":["Component","HomeNutricionistaComponent","ngOnInit","listarControles","listarPacientes","constructor","router","route","renderer","toastr","serviceNutricionista","pacienteService","isClick","exibirPopupExclusao","sucessMessage","exibirMensagem","controleSelecionado","pacientes","contas","categorias","controles","controle","id","nome","cpf","telefone","situacao","descricao","pages","rota","direcionarPagina","pagina","paginaEncontrada","find","p","toLowerCase","console","log","navigate","clicarMenuBento","listarNutricionista","subscribe","data","getPaciente","excluirControle","idControle","deletarNutricionista","setTimeout","success","selecionarControle","nutricionista","openPopup","selectedControle","closePopup","voltarPagina","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\welli\\front_pfmjg\\pfmjg\\src\\app\\module\\pages\\nutricionista\\home-nutricionista\\home-nutricionista.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ɵDomRendererFactory2 } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Categoria } from 'src/app/models/categoria/categoria';\nimport { Conta } from 'src/app/models/conta/conta';\nimport { Nutricionista } from 'src/app/models/nutricionista/nutricionista';\n\nimport { Paciente } from 'src/app/models/paciente';\nimport { Nu } from 'src/app/services/nutricionista.service';\nimport { ServicePaciente } from 'src/app/services/service-paciente.service';\n\n@Component({\n  selector: 'app-home-controle-caixa',\n  templateUrl: './home-nutricionista.component.html',\n  styleUrls: ['./home-nutricionista.component.scss']\n})\nexport class HomeNutricionistaComponent {\n\n  isClick: Boolean = false;\n\n  exibirPopupExclusao = false;\n\n  sucessMessage: string = \"\";\n\n  exibirMensagem: boolean = false;\n\n  selectedControle: any;\n\n  controleSelecionado: Nutricionista | null = null;\n\n  pacientes: Paciente[] = [];\n\n  contas: Conta[] = [];\n\n  categorias: Categoria[] = [];\n\n  controles: Nutricionista[] = [];\n\n  controle: Nutricionista = {\n\n    id: 0,\n    nome: '',\n    cpf: '',\n    telefone: '',\n    situacao: '',\n    descricao: ''\n\n  }\n\n  ngOnInit(): void {\n    \n    this.listarControles();\n    this.listarPacientes();\n  }\n  \n  constructor(private router: Router, private route: ActivatedRoute,\n    private renderer: ɵDomRendererFactory2, private toastr: ToastrService,\n    private serviceNutricionista: NutricionistaService, private pacienteService: ServicePaciente) {\n      \n     }\n  \n     pages = [\n      { nome: \"Home\", rota: \"\" },\n      { nome: \"Agenda\", rota: \"/agendamentos\" },\n      { nome: \"Consulta\", rota: \"/consultas\" },\n      { nome: \"Nutricionista\", rota: \"\"},\n      { nome: \"Categoria\", rota: \"/categorias\"},\n      { nome: \"Paciente\", rota: \"/pacientes\"},\n      // Adicione outras páginas conforme necessário\n    ];\n  \n  \n    direcionarPagina(pagina: string) {\n      // Encontre a página correspondente no array de páginas\n      const paginaEncontrada = this.pages.find(p => p.nome.toLowerCase() === pagina.toLowerCase());\n  \n      if (paginaEncontrada) {\n        console.log(\"Entrou e clicou\");\n        // Redirecione para a rota correspondente\n        this.router.navigate([paginaEncontrada.rota]);\n      }\n    }\n  \n    clicarMenuBento() {\n      this.isClick = !this.isClick;\n    }\n\n  listarControles(): void {\n    this.serviceNutricionista.listarNutricionista().subscribe(data => {\n    this.controles = data;\n  })\n  }\n\n  listarPacientes() {\n    this.pacienteService.getPaciente().subscribe(pacientes => {\n      this.pacientes = pacientes;\n    });\n  }\n\n\n     excluirControle() {\n\n\n      if (this.controleSelecionado && this.controleSelecionado.id) {\n  \n        const idControle = this.controleSelecionado.id;\n        this.serviceNutricionista.deletarNutricionista(idControle). subscribe( () => {\n          \n          this.sucessMessage = \"Consulta Excluído!\";\n          this.exibirMensagem = true;\n          setTimeout(() => {\n            this.toastr.success(this.sucessMessage, 'Sucesso');\n            this.router.navigate(['consultas']);\n          }, 2000)\n          this.listarControles();\n  \n          this.controleSelecionado = null;\n          this.exibirPopupExclusao = false;\n        });\n      \n      }\n      else  {\n          console.log(\"Não encontrado ou erro\");\n      }\n    }\n  \n    selecionarControle(nutricionista: Nutricionista): void {\n      this.controleSelecionado = nutricionista;\n    }\n  \n    openPopup(controle: any) {\n      console.log(\"Clicou\");\n      console.log(this.selectedControle = controle);\n      this.selectedControle = controle;\n    \n    }\n  \n    closePopup() {\n      this.selectedControle = null;\n      this.router.navigate(['/consultas']);\n    }\n\n    voltarPagina(): void {\n      this.router.navigate(['consultas'])\n    }\n  \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}