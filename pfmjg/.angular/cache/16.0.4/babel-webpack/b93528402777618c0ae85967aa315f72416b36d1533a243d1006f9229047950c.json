{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, HostListener, ViewChild } from '@angular/core';\nimport { Paciente } from 'src/app/models/paciente';\nlet CadastrarConsultaComponent = class CadastrarConsultaComponent {\n  constructor(serviceConsulta, rotaAtiva, rota, el, toastr, pacienteService) {\n    this.serviceConsulta = serviceConsulta;\n    this.rotaAtiva = rotaAtiva;\n    this.rota = rota;\n    this.el = el;\n    this.toastr = toastr;\n    this.pacienteService = pacienteService;\n    this.sucessMessage = \"\";\n    this.exibirMensagem = false;\n    this.consulatId = 0;\n    this.selectedPatientId = '';\n    this.consulta = {\n      idConsulta: 0,\n      paciente: new Paciente(),\n      agendamento: 0,\n      dataConsultaAtual: new Date(),\n      tipoConsulta: '',\n      formaPagamento: ''\n    };\n    this.paciente = {\n      idPaciente: 0,\n      cpf: '',\n      nomePaciente: '',\n      dataNascimentoPaciente: new Date(),\n      idadePaciente: 0,\n      cidade: '',\n      estado: '',\n      telefone: ''\n    };\n  }\n  ngOnInit() {\n    this.rotaAtiva.params.subscribe(params => {\n      this.consulatId = +params['id'];\n      console.log('ID do Paciente:', this.consulatId);\n    });\n  }\n  addConsulta(form) {\n    console.log(this.exibirMensagem);\n    console.log(this.consulta.idConsulta);\n    if (form.valid) {\n      this.serviceConsulta.cadastrarConsulta(this.consulta).subscribe(response => {\n        this.sucessMessage = \"Consulta Cadastrado!\";\n        this.exibirMensagem = true;\n        console.log(response);\n        console.log(this.consulta);\n        console.log(this.exibirMensagem);\n        setTimeout(() => {\n          this.toastr.success(this.sucessMessage, 'Sucesso');\n          this.rota.navigate(['consultas']);\n        }, 2000);\n      });\n    } else {\n      console.log();\n    }\n  }\n  buscarDetalhesDoPaciente(cpf) {\n    this.pacienteService.getPacientePorCPF(cpf).subscribe(paciente => {\n      if (paciente) {\n        this.paciente.idPaciente = paciente.idPaciente;\n        this.paciente.cpf = paciente.cpf;\n        this.paciente.nomePaciente = paciente.nomePaciente;\n        this.paciente.dataNascimentoPaciente = paciente.dataNascimentoPaciente;\n        this.paciente.idadePaciente = paciente.idadePaciente;\n        this.paciente.cidade = paciente.cidade;\n        this.paciente.estado = paciente.estado;\n        this.paciente.telefone = paciente.telefone;\n        this.selectedPatientId = cpf;\n        this.consulta.paciente = paciente; // Você pode atribuir diretamente o objeto paciente à agenda.\n      }\n    });\n  }\n\n  voltarPagina() {\n    this.rota.navigate(['consultas']);\n  }\n  onInput() {\n    const input = this.el.nativeElement;\n    if (input.value < 0) {\n      input.value = '';\n    }\n  }\n};\n__decorate([ViewChild('consultaForm')], CadastrarConsultaComponent.prototype, \"consultaForm\", void 0);\n__decorate([HostListener('input')], CadastrarConsultaComponent.prototype, \"onInput\", null);\nCadastrarConsultaComponent = __decorate([Component({\n  selector: 'app-cadastrar-consulta',\n  templateUrl: './cadastrar-consulta.component.html',\n  styleUrls: ['./cadastrar-consulta.component.scss']\n})], CadastrarConsultaComponent);\nexport { CadastrarConsultaComponent };","map":{"version":3,"names":["Component","HostListener","ViewChild","Paciente","CadastrarConsultaComponent","constructor","serviceConsulta","rotaAtiva","rota","el","toastr","pacienteService","sucessMessage","exibirMensagem","consulatId","selectedPatientId","consulta","idConsulta","paciente","agendamento","dataConsultaAtual","Date","tipoConsulta","formaPagamento","idPaciente","cpf","nomePaciente","dataNascimentoPaciente","idadePaciente","cidade","estado","telefone","ngOnInit","params","subscribe","console","log","addConsulta","form","valid","cadastrarConsulta","response","setTimeout","success","navigate","buscarDetalhesDoPaciente","getPacientePorCPF","voltarPagina","onInput","input","nativeElement","value","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\welli\\front_pfmjg\\pfmjg\\src\\app\\module\\pages\\consulta\\cadastrar-consulta\\cadastrar-consulta.component.ts"],"sourcesContent":["import { Component, ElementRef, EventEmitter, HostListener, Input, Output, ViewChild } from '@angular/core';\nimport { FormControl, NgForm, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Categoria } from 'src/app/models/categoria/categoria';\nimport { Consulta } from 'src/app/models/consulta/consulta';\nimport { Paciente } from 'src/app/models/paciente';\nimport { CategoriaService } from 'src/app/services/service-categoria.service';\nimport { ServiceConsulta } from 'src/app/services/service-consulta.service';\nimport { ServicePaciente } from 'src/app/services/service-paciente.service';\n\n\n@Component({\n  selector: 'app-cadastrar-consulta',\n  templateUrl: './cadastrar-consulta.component.html',\n  styleUrls: ['./cadastrar-consulta.component.scss']\n})\nexport class CadastrarConsultaComponent {\n\n  @ViewChild('consultaForm') consultaForm!: NgForm;\n\n  sucessMessage: string = \"\";\n\n  exibirMensagem: boolean = false;\n\n  pacientes: Paciente[]\n\n  consulatId: number = 0;\n\n  selectedPatientId: string = '';\n\n  consulta: Consulta = {\n    idConsulta: 0,\n    paciente: new Paciente,\n    agendamento: 0,\n    dataConsultaAtual: new Date(),\n    tipoConsulta: '',\n    formaPagamento: '',\n  };\n\n  paciente: Paciente = {\n    idPaciente: 0,\n    cpf: '',\n    nomePaciente: '',\n    dataNascimentoPaciente: new Date(),\n    idadePaciente: 0,\n    cidade: '',\n    estado: '',\n    telefone: ''\n  };\n  constructor(private serviceConsulta: ServiceConsulta, private rotaAtiva: ActivatedRoute,\n    private rota: Router, private el: ElementRef, private toastr: ToastrService, private pacienteService: ServicePaciente) {\n\n  }\n\n  ngOnInit() : void {\n    this.rotaAtiva.params.subscribe(params => {\n      this.consulatId = +params['id'];\n      console.log('ID do Paciente:', this.consulatId);\n    })\n  }\n  \n\n  addConsulta(form: NgForm): void {\n    console.log(this.exibirMensagem)\n    console.log(this.consulta.idConsulta)\n   if (form.valid) {\n      this.serviceConsulta.cadastrarConsulta(this.consulta).subscribe(response =>     \n    {\n      this.sucessMessage = \"Consulta Cadastrado!\";\n      this.exibirMensagem = true;\n      console.log(response);\n      console.log(this.consulta);\n      console.log(this.exibirMensagem);\n      setTimeout(() => {\n        this.toastr.success(this.sucessMessage, 'Sucesso');\n        this.rota.navigate(['consultas']);\n      }, 2000)\n    });\n    }\n    else {\n      console.log()\n    }\n  }\n\n  buscarDetalhesDoPaciente(cpf: string): void {\n    this.pacienteService.getPacientePorCPF(cpf).subscribe((paciente) => {\n      if (paciente) {\n        this.paciente.idPaciente = paciente.idPaciente;\n        this.paciente.cpf = paciente.cpf;\n        this.paciente.nomePaciente = paciente.nomePaciente;\n        this.paciente.dataNascimentoPaciente = paciente.dataNascimentoPaciente;\n        this.paciente.idadePaciente = paciente.idadePaciente;\n        this.paciente.cidade = paciente.cidade;\n        this.paciente.estado = paciente.estado;\n        this.paciente.telefone = paciente.telefone;\n  \n        this.selectedPatientId = cpf;\n        this.consulta.paciente = paciente; // Você pode atribuir diretamente o objeto paciente à agenda.\n      }\n    });\n  }\n\n  voltarPagina(): void {\n    this.rota.navigate(['consultas'])\n  }\n\n@HostListener('input')\nonInput() {\n  const input = this.el.nativeElement;\n  if (input.value < 0) {\n    input.value = '';\n  }\n}\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}