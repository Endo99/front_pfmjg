{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ServicePaciente {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/pfmjg/pacientes';\n  }\n  cadastrarPaciente(paciente) {\n    return this.http.post(`${this.apiUrl}/cadastrar-paciente`, paciente);\n  }\n  getPaciente() {\n    return this.http.get(`${this.apiUrl}/listar`);\n  }\n  atualizarPaciente(idPaciente, paciente) {\n    console.log('ID do Paciente:', idPaciente);\n    console.log('Objeto Paciente:', paciente);\n    return this.http.put(`${this.apiUrl}/editar-paciente-${idPaciente}`, paciente);\n  }\n  excluirPaciente(idPaciente) {\n    return this.http.delete(`${this.apiUrl}/deletar-paciente-${idPaciente}`);\n  }\n  getPacienteByName(nomePaciente) {\n    return this.http.get(`${this.apiUrl}/nome/${nomePaciente}`);\n  }\n  getAllPacienteIds() {\n    return this.http.get(`${this.apiUrl}/ids`);\n  }\n  getIdPaciente(idPaciente) {\n    return this.http.get(`${this.apiUrl}-${idPaciente}`);\n  }\n}\nServicePaciente.ɵfac = function ServicePaciente_Factory(t) {\n  return new (t || ServicePaciente)(i0.ɵɵinject(i1.HttpClient));\n};\nServicePaciente.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServicePaciente,\n  factory: ServicePaciente.ɵfac\n});\nexport { ServicePaciente };","map":{"version":3,"names":["ServicePaciente","constructor","http","apiUrl","cadastrarPaciente","paciente","post","getPaciente","get","atualizarPaciente","idPaciente","console","log","put","excluirPaciente","delete","getPacienteByName","nomePaciente","getAllPacienteIds","getIdPaciente","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["C:\\Users\\welli\\front_pfmjg\\pfmjg\\src\\app\\services\\service-paciente.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, first, delay } from 'rxjs';\nimport { Paciente } from '../models/paciente';\n\n@Injectable(\n)\nexport class ServicePaciente {\n  private readonly apiUrl = 'http://localhost:8080/pfmjg/pacientes';\n  constructor(private http: HttpClient) {}\n\n  cadastrarPaciente(paciente: Paciente): Observable<Paciente> {\n    return this.http.post<Paciente>(`${this.apiUrl}/cadastrar-paciente`, paciente);\n  }\n\n  getPaciente(): Observable<Paciente[]> {\n    return this.http.get<Paciente[]>(`${this.apiUrl}/listar`);\n  }\n  \n  atualizarPaciente(idPaciente: number, paciente: Paciente): Observable<Paciente> {\n    console.log('ID do Paciente:', idPaciente);\n    console.log('Objeto Paciente:', paciente);\n    return this.http.put<Paciente>(`${this.apiUrl}/editar-paciente-${idPaciente}`, paciente);\n  }\n  \n  excluirPaciente(idPaciente: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/deletar-paciente-${idPaciente}`);\n  }\n\n  getPacienteByName(nomePaciente: string): Observable<Paciente> {\n    return this.http.get<Paciente>(`${this.apiUrl}/nome/${nomePaciente}`)\n  }\n\n  getAllPacienteIds(): Observable<number[]> {\n    return this.http.get<number[]>(`${this.apiUrl}/ids`);\n  }\n\n  getIdPaciente(idPaciente: number): Observable<Paciente> {\n    return this.http.get<Paciente>(`${this.apiUrl}-${idPaciente}`);\n  }\n\n\n  // private atualizarPaciente(paciente: Paciente): Observable<Paciente> {\n  //   const url = '${this.apiUrl}/${/editar-paciente-paciente.id}';\n  //   return this.http.put<Paciente>(url, paciente);\n  // }\n  // buscarPorNome()\n\n}\n"],"mappings":";;AAKA,MAEaA,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADP,KAAAC,MAAM,GAAG,uCAAuC;EAC1B;EAEvCC,iBAAiBA,CAACC,QAAkB;IAClC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAW,GAAG,IAAI,CAACH,MAAM,qBAAqB,EAAEE,QAAQ,CAAC;EAChF;EAEAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAa,GAAG,IAAI,CAACL,MAAM,SAAS,CAAC;EAC3D;EAEAM,iBAAiBA,CAACC,UAAkB,EAAEL,QAAkB;IACtDM,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,UAAU,CAAC;IAC1CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEP,QAAQ,CAAC;IACzC,OAAO,IAAI,CAACH,IAAI,CAACW,GAAG,CAAW,GAAG,IAAI,CAACV,MAAM,oBAAoBO,UAAU,EAAE,EAAEL,QAAQ,CAAC;EAC1F;EAEAS,eAAeA,CAACJ,UAAkB;IAChC,OAAO,IAAI,CAACR,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACZ,MAAM,qBAAqBO,UAAU,EAAE,CAAC;EAChF;EAEAM,iBAAiBA,CAACC,YAAoB;IACpC,OAAO,IAAI,CAACf,IAAI,CAACM,GAAG,CAAW,GAAG,IAAI,CAACL,MAAM,SAASc,YAAY,EAAE,CAAC;EACvE;EAEAC,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAAChB,IAAI,CAACM,GAAG,CAAW,GAAG,IAAI,CAACL,MAAM,MAAM,CAAC;EACtD;EAEAgB,aAAaA,CAACT,UAAkB;IAC9B,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAW,GAAG,IAAI,CAACL,MAAM,IAAIO,UAAU,EAAE,CAAC;EAChE;;AAhCWV,eAAe,C;mBAAfA,eAAe,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfvB,eAAe,C;SAAfA,eAAe;EAAAwB,OAAA,EAAfxB,eAAe,CAAAyB;AAAA;SAAfzB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}