{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Paciente } from 'src/app/models/paciente';\nlet HomePacienteComponent = class HomePacienteComponent {\n  constructor(pacienteService, router, route, renderer, toastr) {\n    this.pacienteService = pacienteService;\n    this.router = router;\n    this.route = route;\n    this.renderer = renderer;\n    this.toastr = toastr;\n    this.exibirPopupExclusao = false;\n    this.pacienteSelecionado = null;\n    this.sucessMessage = \"\";\n    this.exibirMensagem = false;\n    this.pacientes = [];\n    this.id = '';\n    this.isClick = false;\n    this.agendamento = {\n      idAgendamento: 0,\n      paciente: new Paciente()\n    };\n    this.paciente = {\n      idPaciente: 0,\n      nomePaciente: '',\n      dataNascimentoPaciente: new Date(),\n      idadePaciente: 0,\n      cidade: '',\n      estado: '',\n      telefone: ''\n    };\n    this.pages = [{\n      nome: \"Home\",\n      rota: \"\"\n    }, {\n      nome: \"Agenda\",\n      rota: \"/agendamentos\"\n    }, {\n      nome: \"Consulta\",\n      rota: \"/consultas\"\n    }, {\n      nome: \"Nutricionista\",\n      rota: \"\"\n    }, {\n      nome: \"Categoria\",\n      rota: \"/categorias\"\n    }, {\n      nome: \"Paciente\",\n      rota: \"/pacientes\"\n    }\n    // Adicione outras páginas conforme necessário\n    ];\n  }\n\n  ngOnInit() {\n    this.listarPacientes();\n    if (this.pacienteSelecionado) {\n      this.renderer.addClass(document.body, 'paciente-selecionado');\n    }\n  }\n  listarPacientes() {\n    this.pacienteService.getPaciente().subscribe(data => {\n      this.pacientes = data;\n      this.sortPacientesByNome();\n    });\n  }\n  buscarPaciente(id) {\n    this.pacienteService.getIdPaciente(parseInt(id)).subscribe(paciente => {\n      this.paciente = paciente;\n    }, error => {\n      console.error('Erro ao buscar paciente: ', error);\n    });\n  }\n  salvarPaciente() {\n    if (this.paciente.idPaciente) {\n      this.pacienteService.atualizarPaciente(this.paciente.idPaciente, this.paciente).subscribe(response => {\n        this.router.navigate(['/pacientes']);\n      }, error => {\n        console.error('Erro ao salvar paciente: ', error);\n      });\n    } else {\n      console.error('ID do paciente não definido.');\n    }\n  }\n  excluirPaciente() {\n    if (this.pacienteSelecionado && this.pacienteSelecionado.idPaciente) {\n      const idPaciente = this.pacienteSelecionado.idPaciente;\n      this.pacienteService.excluirPaciente(idPaciente).subscribe(() => {\n        this.sucessMessage = \"Paciente Excluído!\";\n        this.exibirMensagem = true;\n        setTimeout(() => {\n          this.toastr.success(this.sucessMessage, 'Sucesso');\n          this.router.navigate(['pacientes']);\n        }, 2000);\n        this.listarPacientes();\n        this.pacienteSelecionado = null;\n        this.exibirPopupExclusao = false;\n      });\n    } else {\n      console.log(\"Não encontrado ou erro\");\n    }\n  }\n  selecionarPaciente(paciente) {\n    this.pacienteSelecionado = paciente;\n  }\n  openPopup(paciente) {\n    console.log(\"Clicou\");\n    console.log(this.selectedPaciente = paciente);\n    this.selectedPaciente = paciente;\n  }\n  closePopup() {\n    this.selectedPaciente = null;\n    this.router.navigate(['/pacientes']);\n  }\n  sortPacientesByNome() {\n    this.pacientes = this.pacientes.filter(paciente => paciente.nomePaciente !== undefined);\n    this.pacientes.sort((a, b) => {\n      const nomeA = a.nomePaciente.toLowerCase();\n      const nomeB = b.nomePaciente.toLowerCase();\n      if (nomeA < nomeB) {\n        return -1;\n      }\n      if (nomeA > nomeB) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n  voltarPagina() {\n    this.router.navigate(['pacientes']);\n  }\n  direcionarPagina(pagina) {\n    // Encontre a página correspondente no array de páginas\n    const paginaEncontrada = this.pages.find(p => p.nome.toLowerCase() === pagina.toLowerCase());\n    if (paginaEncontrada) {\n      console.log(\"Entrou e clicou\");\n      // Redirecione para a rota correspondente\n      this.router.navigate([paginaEncontrada.rota]);\n    }\n  }\n  clicarMenuBento() {\n    this.isClick = !this.isClick;\n  }\n};\nHomePacienteComponent = __decorate([Component({\n  selector: 'app-home-paciente',\n  templateUrl: './home-paciente.component.html',\n  styleUrls: ['./home-paciente.component.scss']\n})], HomePacienteComponent);\nexport { HomePacienteComponent };","map":{"version":3,"names":["Component","Paciente","HomePacienteComponent","constructor","pacienteService","router","route","renderer","toastr","exibirPopupExclusao","pacienteSelecionado","sucessMessage","exibirMensagem","pacientes","id","isClick","agendamento","idAgendamento","paciente","idPaciente","nomePaciente","dataNascimentoPaciente","Date","idadePaciente","cidade","estado","telefone","pages","nome","rota","ngOnInit","listarPacientes","addClass","document","body","getPaciente","subscribe","data","sortPacientesByNome","buscarPaciente","getIdPaciente","parseInt","error","console","salvarPaciente","atualizarPaciente","response","navigate","excluirPaciente","setTimeout","success","log","selecionarPaciente","openPopup","selectedPaciente","closePopup","filter","undefined","sort","a","b","nomeA","toLowerCase","nomeB","voltarPagina","direcionarPagina","pagina","paginaEncontrada","find","p","clicarMenuBento","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\welli\\front_pfmjg\\pfmjg\\src\\app\\module\\pages\\pacientes\\home-paciente\\home-paciente.component.ts"],"sourcesContent":["import { NgForOf } from '@angular/common';\nimport { Component, Directive, OnInit, Renderer2 } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Agendamento } from 'src/app/models/agendamento/agendamento';\nimport { Paciente } from 'src/app/models/paciente';\nimport { ServicePaciente } from 'src/app/services/service-paciente.service';\n@Component({\n  selector: 'app-home-paciente',\n  templateUrl: './home-paciente.component.html',\n  styleUrls: ['./home-paciente.component.scss']\n})\nexport class HomePacienteComponent implements OnInit{\n\n  exibirPopupExclusao = false;\n  pacienteSelecionado: Paciente | null = null;\n\n  sucessMessage: string = \"\";\n\n  exibirMensagem: boolean = false;\n\n  selectedPaciente: any;\n\n  pacientes: Paciente[] = [];\n\n  id: string = '';\n\n  isClick: Boolean = false;\n\n  agendamento: Agendamento = {\n    idAgendamento: 0,\n    paciente: new Paciente,\n  }\n\n  paciente: Paciente = {\n    idPaciente: 0,\n    nomePaciente: '',\n    dataNascimentoPaciente: new Date(),\n    idadePaciente: 0,\n    cidade: '',\n    estado: '',\n    telefone: '',\n  };\n\n  constructor(private pacienteService: ServicePaciente, private router: Router, private route: ActivatedRoute,\n    private renderer: Renderer2, private toastr: ToastrService) {\n     }\n\n  ngOnInit(): void {\n    \n    this.listarPacientes();\n    if (this.pacienteSelecionado) {\n      this.renderer.addClass(document.body, 'paciente-selecionado');\n    }\n  }\n  \n  listarPacientes(): void {\n      this.pacienteService.getPaciente().subscribe(data => {\n      this.pacientes = data;\n      this.sortPacientesByNome();\n    })\n  }\n  \n  buscarPaciente(id: string): void {\n    this.pacienteService.getIdPaciente(parseInt(id)).subscribe(\n      paciente => {\n        this.paciente = paciente;\n      },\n      error => {\n        console.error('Erro ao buscar paciente: ', error);\n      }\n    );\n  }\n\n  salvarPaciente(): void {\n    if (this.paciente.idPaciente) {\n      this.pacienteService.atualizarPaciente(this.paciente.idPaciente, this.paciente).subscribe(\n        response => {\n          this.router.navigate(['/pacientes']);\n        },\n        error => {\n          console.error('Erro ao salvar paciente: ', error);\n        }\n      );\n    } else {\n      console.error('ID do paciente não definido.');\n    }\n  }\n\n  excluirPaciente() {\n\n\n    if (this.pacienteSelecionado && this.pacienteSelecionado.idPaciente) {\n\n      const idPaciente = this.pacienteSelecionado.idPaciente;\n      this.pacienteService.excluirPaciente(idPaciente). subscribe( () => {\n        \n        this.sucessMessage = \"Paciente Excluído!\";\n        this.exibirMensagem = true;\n        setTimeout(() => {\n          this.toastr.success(this.sucessMessage, 'Sucesso');\n          this.router.navigate(['pacientes']);\n        }, 2000)\n        this.listarPacientes();\n\n        this.pacienteSelecionado = null;\n        this.exibirPopupExclusao = false;\n      });\n    \n    }\n    else  {\n        console.log(\"Não encontrado ou erro\");\n    }\n  }\n\n  selecionarPaciente(paciente: Paciente): void {\n    this.pacienteSelecionado = paciente;\n  }\n\n  openPopup(paciente: any) {\n    console.log(\"Clicou\");\n    console.log(this.selectedPaciente = paciente);\n    this.selectedPaciente = paciente;\n  \n  }\n\n  closePopup() {\n    this.selectedPaciente = null;\n    this.router.navigate(['/pacientes']);\n  }\n\n  sortPacientesByNome() {\n    this.pacientes = this.pacientes.filter(paciente => paciente.nomePaciente !== undefined);\n    this.pacientes.sort((a, b) => {\n    const nomeA = a.nomePaciente!.toLowerCase();\n    const nomeB = b.nomePaciente!.toLowerCase();\n    if (nomeA < nomeB) {\n      return -1;\n    }\n    if (nomeA > nomeB) {\n      return 1;\n    }\n    return 0;\n  });\n  }\n  \n  voltarPagina(): void {\n    this.router.navigate(['pacientes'])\n  }\n\n  pages = [\n    { nome: \"Home\", rota: \"\" },\n    { nome: \"Agenda\", rota: \"/agendamentos\" },\n    { nome: \"Consulta\", rota: \"/consultas\" },\n    { nome: \"Nutricionista\", rota: \"\"},\n    { nome: \"Categoria\", rota: \"/categorias\"},\n    { nome: \"Paciente\", rota: \"/pacientes\"},\n    // Adicione outras páginas conforme necessário\n  ];\n\n\n  direcionarPagina(pagina: string) {\n    // Encontre a página correspondente no array de páginas\n    const paginaEncontrada = this.pages.find(p => p.nome.toLowerCase() === pagina.toLowerCase());\n\n    if (paginaEncontrada) {\n      console.log(\"Entrou e clicou\");\n      // Redirecione para a rota correspondente\n      this.router.navigate([paginaEncontrada.rota]);\n    }\n  }\n\n  clicarMenuBento() {\n    this.isClick = !this.isClick;\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}