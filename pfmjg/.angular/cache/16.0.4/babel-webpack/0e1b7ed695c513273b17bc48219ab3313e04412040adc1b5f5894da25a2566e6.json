{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HomePacienteComponent = class HomePacienteComponent {\n  constructor(pacienteService, router, route) {\n    this.pacienteService = pacienteService;\n    this.router = router;\n    this.route = route;\n    this.exibirPopupExclusao = false;\n    this.pacienteSelecionado = null;\n    this.pacientes = [];\n    this.id = '';\n    this.paciente = {\n      idPaciente: 0,\n      nomePaciente: '',\n      sobrenomePaciente: '',\n      dataNascimentoPaciente: new Date(),\n      idadePaciente: 0,\n      cidade: '',\n      estado: '',\n      statusPagamento: '',\n      tipoConsulta: '',\n      mesesAcompanhado: 0,\n      telefone: '',\n      quantiaPaga: 0,\n      formaPagamento: '',\n      valorConsulta: 0\n    };\n  }\n  ngOnInit() {\n    this.listarPacientes();\n  }\n  listarPacientes() {\n    this.pacienteService.getPaciente().subscribe(data => {\n      this.pacientes = data;\n    });\n  }\n  buscarPaciente(id) {\n    this.pacienteService.getIdPaciente(parseInt(id)).subscribe(paciente => {\n      this.paciente = paciente;\n    }, error => {\n      console.error('Erro ao buscar paciente: ', error);\n    });\n  }\n  salvarPaciente() {\n    if (this.paciente.idPaciente) {\n      this.pacienteService.atualizarPaciente(this.paciente.idPaciente, this.paciente).subscribe(response => {\n        this.router.navigate(['/pacientes']);\n      }, error => {\n        console.error('Erro ao salvar paciente: ', error);\n      });\n    } else {\n      console.error('ID do paciente não definido.');\n    }\n  }\n  excluirPaciente() {\n    if (this.pacienteSelecionado) {\n      // Implemente sua lógica de exclusão aqui\n      // Por exemplo, você pode chamar um serviço para excluir o paciente\n      // e atualizar a lista de pacientes após a exclusão\n      // Aqui está um exemplo de como você pode remover o paciente da lista\n      const index = this.pacientes.indexOf(this.pacienteSelecionado);\n      if (index > -1) {\n        this.pacientes.splice(index, 1);\n      }\n      // Após a exclusão, você pode redefinir o paciente selecionado e fechar o pop-up\n      this.pacienteSelecionado = null;\n      this.exibirPopupExclusao = false;\n    }\n  }\n  abrirPopupExclusao(paciente) {\n    this.pacienteSelecionado = paciente;\n    this.exibirPopupExclusao = true;\n  }\n};\nHomePacienteComponent = __decorate([Component({\n  selector: 'app-home-paciente',\n  templateUrl: './home-paciente.component.html',\n  styleUrls: ['./home-paciente.component.scss']\n})], HomePacienteComponent);\nexport { HomePacienteComponent };","map":{"version":3,"names":["Component","HomePacienteComponent","constructor","pacienteService","router","route","exibirPopupExclusao","pacienteSelecionado","pacientes","id","paciente","idPaciente","nomePaciente","sobrenomePaciente","dataNascimentoPaciente","Date","idadePaciente","cidade","estado","statusPagamento","tipoConsulta","mesesAcompanhado","telefone","quantiaPaga","formaPagamento","valorConsulta","ngOnInit","listarPacientes","getPaciente","subscribe","data","buscarPaciente","getIdPaciente","parseInt","error","console","salvarPaciente","atualizarPaciente","response","navigate","excluirPaciente","index","indexOf","splice","abrirPopupExclusao","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\welli\\front_pfmjg\\pfmjg\\src\\app\\module\\pages\\pacientes\\home-paciente\\home-paciente.component.ts"],"sourcesContent":["import { NgForOf } from '@angular/common';\nimport { Component, Directive, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Paciente } from 'src/app/models/paciente';\nimport { ServicePaciente } from 'src/app/services/service-paciente';\n\n@Component({\n  selector: 'app-home-paciente',\n  templateUrl: './home-paciente.component.html',\n  styleUrls: ['./home-paciente.component.scss']\n})\nexport class HomePacienteComponent implements OnInit{\n\n  exibirPopupExclusao = false;\n  pacienteSelecionado: any = null;\n\n  pacientes: Paciente[] = [];\n\n  id: string = '';\n\n  paciente: Paciente = {\n    idPaciente: 0,\n    nomePaciente: '',\n    sobrenomePaciente: '',\n    dataNascimentoPaciente: new Date(),\n    idadePaciente: 0,\n    cidade: '',\n    estado: '',\n    statusPagamento: '',\n    tipoConsulta: '',\n    mesesAcompanhado: 0, \n    telefone: '',\n    quantiaPaga: 0,\n    formaPagamento: '',\n    valorConsulta: 0,\n  };\n\n  constructor(private pacienteService: ServicePaciente, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.listarPacientes();\n  }\n\n  listarPacientes(): void {\n      this.pacienteService.getPaciente().subscribe(data => {\n      this.pacientes = data;\n    })\n  }\n  \n  buscarPaciente(id: string): void {\n    this.pacienteService.getIdPaciente(parseInt(id)).subscribe(\n      paciente => {\n        this.paciente = paciente;\n      },\n      error => {\n        console.error('Erro ao buscar paciente: ', error);\n      }\n    );\n  }\n\n  salvarPaciente(): void {\n    if (this.paciente.idPaciente) {\n      this.pacienteService.atualizarPaciente(this.paciente.idPaciente, this.paciente).subscribe(\n        response => {\n          this.router.navigate(['/pacientes']);\n        },\n        error => {\n          console.error('Erro ao salvar paciente: ', error);\n        }\n      );\n    } else {\n      console.error('ID do paciente não definido.');\n    }\n  }\n\n  excluirPaciente() {\n    if (this.pacienteSelecionado) {\n      // Implemente sua lógica de exclusão aqui\n      // Por exemplo, você pode chamar um serviço para excluir o paciente\n      // e atualizar a lista de pacientes após a exclusão\n\n      // Aqui está um exemplo de como você pode remover o paciente da lista\n      const index = this.pacientes.indexOf(this.pacienteSelecionado);\n      if (index > -1) {\n        this.pacientes.splice(index, 1);\n      }\n\n      // Após a exclusão, você pode redefinir o paciente selecionado e fechar o pop-up\n      this.pacienteSelecionado = null;\n      this.exibirPopupExclusao = false;\n    }\n  }\n\n  abrirPopupExclusao(paciente: any) {\n    this.pacienteSelecionado = paciente;\n    this.exibirPopupExclusao = true;\n  }\n    // Lógica para excluir o paciente\n    // ...\n    // Após a exclusão, você pode atualizar a lista de pacientes, se necessário.\n}\n"],"mappings":";AACA,SAASA,SAAS,QAA2B,eAAe;AAU5D,IAAaC,qBAAqB,GAAlC,MAAaA,qBAAqB;EA0BhCC,YAAoBC,eAAgC,EAAUC,MAAc,EAAUC,KAAqB;IAAvF,KAAAF,eAAe,GAAfA,eAAe;IAA2B,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;IAxB3F,KAAAC,mBAAmB,GAAG,KAAK;IAC3B,KAAAC,mBAAmB,GAAQ,IAAI;IAE/B,KAAAC,SAAS,GAAe,EAAE;IAE1B,KAAAC,EAAE,GAAW,EAAE;IAEf,KAAAC,QAAQ,GAAa;MACnBC,UAAU,EAAE,CAAC;MACbC,YAAY,EAAE,EAAE;MAChBC,iBAAiB,EAAE,EAAE;MACrBC,sBAAsB,EAAE,IAAIC,IAAI,EAAE;MAClCC,aAAa,EAAE,CAAC;MAChBC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE,EAAE;MACVC,eAAe,EAAE,EAAE;MACnBC,YAAY,EAAE,EAAE;MAChBC,gBAAgB,EAAE,CAAC;MACnBC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,CAAC;MACdC,cAAc,EAAE,EAAE;MAClBC,aAAa,EAAE;KAChB;EAE8G;EAE/GC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAA,eAAeA,CAAA;IACX,IAAI,CAACxB,eAAe,CAACyB,WAAW,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACpD,IAAI,CAACtB,SAAS,GAAGsB,IAAI;IACvB,CAAC,CAAC;EACJ;EAEAC,cAAcA,CAACtB,EAAU;IACvB,IAAI,CAACN,eAAe,CAAC6B,aAAa,CAACC,QAAQ,CAACxB,EAAE,CAAC,CAAC,CAACoB,SAAS,CACxDnB,QAAQ,IAAG;MACT,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B,CAAC,EACDwB,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CACF;EACH;EAEAE,cAAcA,CAAA;IACZ,IAAI,IAAI,CAAC1B,QAAQ,CAACC,UAAU,EAAE;MAC5B,IAAI,CAACR,eAAe,CAACkC,iBAAiB,CAAC,IAAI,CAAC3B,QAAQ,CAACC,UAAU,EAAE,IAAI,CAACD,QAAQ,CAAC,CAACmB,SAAS,CACvFS,QAAQ,IAAG;QACT,IAAI,CAAClC,MAAM,CAACmC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;MACtC,CAAC,EACDL,KAAK,IAAG;QACNC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,CACF;KACF,MAAM;MACLC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAC;;EAEjD;EAEAM,eAAeA,CAAA;IACb,IAAI,IAAI,CAACjC,mBAAmB,EAAE;MAC5B;MACA;MACA;MAEA;MACA,MAAMkC,KAAK,GAAG,IAAI,CAACjC,SAAS,CAACkC,OAAO,CAAC,IAAI,CAACnC,mBAAmB,CAAC;MAC9D,IAAIkC,KAAK,GAAG,CAAC,CAAC,EAAE;QACd,IAAI,CAACjC,SAAS,CAACmC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;;MAGjC;MACA,IAAI,CAAClC,mBAAmB,GAAG,IAAI;MAC/B,IAAI,CAACD,mBAAmB,GAAG,KAAK;;EAEpC;EAEAsC,kBAAkBA,CAAClC,QAAa;IAC9B,IAAI,CAACH,mBAAmB,GAAGG,QAAQ;IACnC,IAAI,CAACJ,mBAAmB,GAAG,IAAI;EACjC;CAID;AAzFYL,qBAAqB,GAAA4C,UAAA,EALjC7C,SAAS,CAAC;EACT8C,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACW/C,qBAAqB,CAyFjC;SAzFYA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}