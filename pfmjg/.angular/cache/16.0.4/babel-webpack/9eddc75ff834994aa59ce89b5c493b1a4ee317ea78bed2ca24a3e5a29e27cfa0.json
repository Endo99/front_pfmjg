{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet DetalhesPacienteComponent = class DetalhesPacienteComponent {\n  constructor(pacienteService, router, route) {\n    this.pacienteService = pacienteService;\n    this.router = router;\n    this.route = route;\n    this.id = 0;\n    this.pacientes = [];\n    this.paciente = {\n      idPaciente: 0,\n      nomePaciente: '',\n      sobrenomePaciente: '',\n      dataNascimentoPaciente: new Date(),\n      idadePaciente: 0,\n      cidade: '',\n      estado: '',\n      statusPagamento: '',\n      tipoConsulta: '',\n      mesesAcompanhado: 0,\n      telefone: '',\n      quantiaPaga: 0,\n      formaPagamento: '',\n      valorConsulta: 0\n    };\n  }\n  ngOnInit() {\n    this.listarPacientes();\n    const idParam = this.route.snapshot.paramMap.get('id');\n    if (idParam !== null) {\n      this.id = +idParam;\n    }\n  }\n  listarPacientes() {\n    this.pacienteService.getPaciente().subscribe(pacientes => {\n      this.pacientes = pacientes;\n      console.log(pacientes);\n    }, error => {\n      console.error('Erro ao carregar pacientes: ', error);\n    });\n  }\n  openPopup(paciente) {\n    this.selectedPaciente = paciente;\n  }\n  closePopup() {\n    this.selectedPaciente = null;\n    this.router.navigate(['/pacientes']);\n  }\n};\nDetalhesPacienteComponent = __decorate([Component({\n  selector: 'app-detalhes-paciente',\n  templateUrl: './detalhes-paciente.component.html',\n  styleUrls: ['./detalhes-paciente.component.scss']\n})], DetalhesPacienteComponent);\nexport { DetalhesPacienteComponent };","map":{"version":3,"names":["Component","DetalhesPacienteComponent","constructor","pacienteService","router","route","id","pacientes","paciente","idPaciente","nomePaciente","sobrenomePaciente","dataNascimentoPaciente","Date","idadePaciente","cidade","estado","statusPagamento","tipoConsulta","mesesAcompanhado","telefone","quantiaPaga","formaPagamento","valorConsulta","ngOnInit","listarPacientes","idParam","snapshot","paramMap","get","getPaciente","subscribe","console","log","error","openPopup","selectedPaciente","closePopup","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\welli\\front_pfmjg\\pfmjg\\src\\app\\module\\pages\\pacientes\\detalhes-paciente\\detalhes-paciente.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Paciente } from 'src/app/models/paciente';\nimport { ServicePaciente } from 'src/app/services/service-paciente.service';\n\n@Component({\n  selector: 'app-detalhes-paciente',\n  templateUrl: './detalhes-paciente.component.html',\n  styleUrls: ['./detalhes-paciente.component.scss']\n})\nexport class DetalhesPacienteComponent implements OnInit{\n  \n  id: number = 0;\n  \n  pacientes: Paciente[] = [];\n  \n  selectedPaciente: any;\n\n  paciente: Paciente = {\n    idPaciente: 0,\n    nomePaciente: '',\n    sobrenomePaciente: '',\n    dataNascimentoPaciente: new Date(),\n    idadePaciente: 0,\n    cidade: '',\n    estado: '',\n    statusPagamento: '',\n    tipoConsulta: '',\n    mesesAcompanhado: 0, \n    telefone: '',\n    quantiaPaga: 0,\n    formaPagamento: '',\n    valorConsulta: 0,\n  };\n\n  constructor(private pacienteService: ServicePaciente, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.listarPacientes();\n    const idParam = this.route.snapshot.paramMap.get('id');\n    if (idParam !== null) {\n      this.id = +idParam;\n    }\n  }\n\n  listarPacientes(): void {\n    this.pacienteService.getPaciente().subscribe(\n      pacientes => {\n        this.pacientes = pacientes;\n        console.log(pacientes);\n      },\n      error => {\n        console.error('Erro ao carregar pacientes: ', error);\n      }\n    );\n  }\n\n\n  openPopup(paciente: any) {\n    this.selectedPaciente = paciente;\n  }\n\n  closePopup() {\n    this.selectedPaciente = null;\n    this.router.navigate(['/pacientes']);\n  }\n  \n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAUjD,IAAaC,yBAAyB,GAAtC,MAAaA,yBAAyB;EAyBpCC,YAAoBC,eAAgC,EAAUC,MAAc,EAAUC,KAAqB;IAAvF,KAAAF,eAAe,GAAfA,eAAe;IAA2B,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;IAvB3F,KAAAC,EAAE,GAAW,CAAC;IAEd,KAAAC,SAAS,GAAe,EAAE;IAI1B,KAAAC,QAAQ,GAAa;MACnBC,UAAU,EAAE,CAAC;MACbC,YAAY,EAAE,EAAE;MAChBC,iBAAiB,EAAE,EAAE;MACrBC,sBAAsB,EAAE,IAAIC,IAAI,EAAE;MAClCC,aAAa,EAAE,CAAC;MAChBC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE,EAAE;MACVC,eAAe,EAAE,EAAE;MACnBC,YAAY,EAAE,EAAE;MAChBC,gBAAgB,EAAE,CAAC;MACnBC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,CAAC;MACdC,cAAc,EAAE,EAAE;MAClBC,aAAa,EAAE;KAChB;EAE8G;EAE/GC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;IACtB,MAAMC,OAAO,GAAG,IAAI,CAACrB,KAAK,CAACsB,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACtD,IAAIH,OAAO,KAAK,IAAI,EAAE;MACpB,IAAI,CAACpB,EAAE,GAAG,CAACoB,OAAO;;EAEtB;EAEAD,eAAeA,CAAA;IACb,IAAI,CAACtB,eAAe,CAAC2B,WAAW,EAAE,CAACC,SAAS,CAC1CxB,SAAS,IAAG;MACV,IAAI,CAACA,SAAS,GAAGA,SAAS;MAC1ByB,OAAO,CAACC,GAAG,CAAC1B,SAAS,CAAC;IACxB,CAAC,EACD2B,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CACF;EACH;EAGAC,SAASA,CAAC3B,QAAa;IACrB,IAAI,CAAC4B,gBAAgB,GAAG5B,QAAQ;EAClC;EAEA6B,UAAUA,CAAA;IACR,IAAI,CAACD,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAAChC,MAAM,CAACkC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EACtC;CAED;AAzDYrC,yBAAyB,GAAAsC,UAAA,EALrCvC,SAAS,CAAC;EACTwC,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,oCAAoC;EACjDC,SAAS,EAAE,CAAC,oCAAoC;CACjD,CAAC,C,EACWzC,yBAAyB,CAyDrC;SAzDYA,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}