{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HomePacienteComponent = class HomePacienteComponent {\n  constructor(pacienteService, router, route, renderer) {\n    this.pacienteService = pacienteService;\n    this.router = router;\n    this.route = route;\n    this.renderer = renderer;\n    this.exibirPopupExclusao = false;\n    this.pacienteSelecionado = null;\n    this.pacientes = [];\n    this.id = '';\n    this.paciente = {\n      idPaciente: 0,\n      nomePaciente: '',\n      sobrenomePaciente: '',\n      dataNascimentoPaciente: new Date(),\n      idadePaciente: 0,\n      cidade: '',\n      estado: '',\n      statusPagamento: '',\n      tipoConsulta: '',\n      mesesAcompanhado: 0,\n      telefone: '',\n      quantiaPaga: 0,\n      formaPagamento: '',\n      valorConsulta: 0\n    };\n  }\n  ngOnInit() {\n    this.listarPacientes();\n    if (this.pacienteSelecionado) {\n      this.renderer.addClass(document.body, 'paciente-selecionado');\n    }\n  }\n  listarPacientes() {\n    this.pacienteService.getPaciente().subscribe(data => {\n      this.pacientes = data;\n    });\n  }\n  buscarPaciente(id) {\n    this.pacienteService.getIdPaciente(parseInt(id)).subscribe(paciente => {\n      this.paciente = paciente;\n    }, error => {\n      console.error('Erro ao buscar paciente: ', error);\n    });\n  }\n  salvarPaciente() {\n    if (this.paciente.idPaciente) {\n      this.pacienteService.atualizarPaciente(this.paciente.idPaciente, this.paciente).subscribe(response => {\n        this.router.navigate(['/pacientes']);\n      }, error => {\n        console.error('Erro ao salvar paciente: ', error);\n      });\n    } else {\n      console.error('ID do paciente n達o definido.');\n    }\n  }\n  excluirPaciente() {\n    if (this.pacienteSelecionado && this.pacienteSelecionado.idPaciente) {\n      const idPaciente = this.pacienteSelecionado.idPaciente;\n      this.pacienteService.excluirPaciente(idPaciente).subscribe(() => {\n        console.log('Paciente excluido com sucesso!');\n        this.listarPacientes();\n        this.pacienteSelecionado = null;\n        this.exibirPopupExclusao = false;\n      });\n    } else {\n      console.log(\"N達o encontrado ou erro\");\n    }\n  }\n  selecionarPaciente(paciente) {\n    this.pacienteSelecionado = paciente;\n  }\n  openPopup(paciente) {\n    if (this.selectedPaciente) {\n      this.selectedPaciente = paciente;\n    }\n  }\n  closePopup() {\n    this.selectedPaciente = null;\n    this.router.navigate(['/pacientes']);\n  }\n};\nHomePacienteComponent = __decorate([Component({\n  selector: 'app-home-paciente',\n  templateUrl: './home-paciente.component.html',\n  styleUrls: ['./home-paciente.component.scss']\n})], HomePacienteComponent);\nexport { HomePacienteComponent };","map":{"version":3,"names":["Component","HomePacienteComponent","constructor","pacienteService","router","route","renderer","exibirPopupExclusao","pacienteSelecionado","pacientes","id","paciente","idPaciente","nomePaciente","sobrenomePaciente","dataNascimentoPaciente","Date","idadePaciente","cidade","estado","statusPagamento","tipoConsulta","mesesAcompanhado","telefone","quantiaPaga","formaPagamento","valorConsulta","ngOnInit","listarPacientes","addClass","document","body","getPaciente","subscribe","data","buscarPaciente","getIdPaciente","parseInt","error","console","salvarPaciente","atualizarPaciente","response","navigate","excluirPaciente","log","selecionarPaciente","openPopup","selectedPaciente","closePopup","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\welli\\front_pfmjg\\pfmjg\\src\\app\\module\\pages\\pacientes\\home-paciente\\home-paciente.component.ts"],"sourcesContent":["import { NgForOf } from '@angular/common';\nimport { Component, Directive, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Paciente } from 'src/app/models/paciente';\nimport { ServicePaciente } from 'src/app/services/service-paciente.service';\n@Component({\n  selector: 'app-home-paciente',\n  templateUrl: './home-paciente.component.html',\n  styleUrls: ['./home-paciente.component.scss']\n})\nexport class HomePacienteComponent implements OnInit{\n\n  exibirPopupExclusao = false;\n  pacienteSelecionado: Paciente | null = null;\n\n  selectedPaciente: any;\n\n  pacientes: Paciente[] = [];\n\n  id: string = '';\n\n  paciente: Paciente = {\n    idPaciente: 0,\n    nomePaciente: '',\n    sobrenomePaciente: '',\n    dataNascimentoPaciente: new Date(),\n    idadePaciente: 0,\n    cidade: '',\n    estado: '',\n    statusPagamento: '',\n    tipoConsulta: '',\n    mesesAcompanhado: 0, \n    telefone: '',\n    quantiaPaga: 0,\n    formaPagamento: '',\n    valorConsulta: 0,\n  };\n\n  constructor(private pacienteService: ServicePaciente, private router: Router, private route: ActivatedRoute, private renderer: Renderer2) { }\n\n  ngOnInit(): void {\n    this.listarPacientes();\n    if (this.pacienteSelecionado) {\n      this.renderer.addClass(document.body, 'paciente-selecionado');\n    }\n  }\n\n  listarPacientes(): void {\n      this.pacienteService.getPaciente().subscribe(data => {\n      this.pacientes = data;\n    })\n  }\n  \n  buscarPaciente(id: string): void {\n    this.pacienteService.getIdPaciente(parseInt(id)).subscribe(\n      paciente => {\n        this.paciente = paciente;\n      },\n      error => {\n        console.error('Erro ao buscar paciente: ', error);\n      }\n    );\n  }\n\n  salvarPaciente(): void {\n    if (this.paciente.idPaciente) {\n      this.pacienteService.atualizarPaciente(this.paciente.idPaciente, this.paciente).subscribe(\n        response => {\n          this.router.navigate(['/pacientes']);\n        },\n        error => {\n          console.error('Erro ao salvar paciente: ', error);\n        }\n      );\n    } else {\n      console.error('ID do paciente n達o definido.');\n    }\n  }\n\n  excluirPaciente() {\n\n\n    if (this.pacienteSelecionado && this.pacienteSelecionado.idPaciente) {\n\n      const idPaciente = this.pacienteSelecionado.idPaciente;\n      this.pacienteService.excluirPaciente(idPaciente). subscribe( () => {\n        console.log('Paciente excluido com sucesso!');\n\n        this.listarPacientes();\n\n        this.pacienteSelecionado = null;\n        this.exibirPopupExclusao = false;\n      });\n    \n    }\n    else  {\n        console.log(\"N達o encontrado ou erro\");\n    }\n  }\n\n  selecionarPaciente(paciente: Paciente): void {\n    this.pacienteSelecionado = paciente;\n  }\n\n  openPopup(paciente: any) {\n    if (this.selectedPaciente) {\n      this.selectedPaciente = paciente;\n    }\n  }\n\n  closePopup() {\n    this.selectedPaciente = null;\n    this.router.navigate(['/pacientes']);\n  }\n  \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}