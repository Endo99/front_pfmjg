{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ServiceAgendamento {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/pfmjg/agendamentos';\n  }\n  cadastrarAgendamento(agendamento, idPaciente) {\n    return this.http.post(`${this.apiUrl}/cadastrar-agenda//${idPaciente}`, agendamento);\n  }\n  getAgendamento() {\n    return this.http.get(`${this.apiUrl}/listar`);\n  }\n  atualizarAgendamento(idAgendamento, agendamento) {\n    console.log('ID do Agendamento:', idAgendamento);\n    console.log('Objeto Agendamento:', agendamento);\n    return this.http.put(`${this.apiUrl}/editar-agenda/${idAgendamento}`, agendamento);\n  }\n  excluirAgendamento(idAgendamento) {\n    return this.http.delete(`${this.apiUrl}/deletar-agenda/${idAgendamento}`);\n  }\n  getAgendamentoByName(nomeAgendamento) {\n    return this.http.get(`${this.apiUrl}/nome/${nomeAgendamento}`);\n  }\n  getAllAgendamentoIds() {\n    return this.http.get(`${this.apiUrl}/ids`);\n  }\n  getIdAgendamento(idAgendamento) {\n    return this.http.get(`${this.apiUrl}/${idAgendamento}`);\n  }\n  getPaciente(IdAgenda) {\n    return this.http.get(`${this.apiUrl}/paciente/${IdAgenda}`);\n  }\n}\nServiceAgendamento.ɵfac = function ServiceAgendamento_Factory(t) {\n  return new (t || ServiceAgendamento)(i0.ɵɵinject(i1.HttpClient));\n};\nServiceAgendamento.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServiceAgendamento,\n  factory: ServiceAgendamento.ɵfac,\n  providedIn: 'root'\n});\nexport { ServiceAgendamento };","map":{"version":3,"names":["ServiceAgendamento","constructor","http","apiUrl","cadastrarAgendamento","agendamento","idPaciente","post","getAgendamento","get","atualizarAgendamento","idAgendamento","console","log","put","excluirAgendamento","delete","getAgendamentoByName","nomeAgendamento","getAllAgendamentoIds","getIdAgendamento","getPaciente","IdAgenda","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\welli\\front_pfmjg\\pfmjg\\src\\app\\services\\service-agendamento.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Agendamento } from '../models/agendamento/agendamento';\nimport { Observable } from 'rxjs';\nimport { Paciente } from '../models/paciente';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceAgendamento {\n\n  private readonly apiUrl = 'http://localhost:8080/pfmjg/agendamentos';\n  constructor(private http: HttpClient) {}\n\n  cadastrarAgendamento(agendamento: Agendamento, idPaciente: number | undefined): Observable<Agendamento> {\n    return this.http.post<Agendamento>(`${this.apiUrl}/cadastrar-agenda//${idPaciente}`, agendamento);\n  }\n\n  getAgendamento(): Observable<Agendamento[]> {\n    return this.http.get<Agendamento[]>(`${this.apiUrl}/listar`);\n  }\n  \n  atualizarAgendamento(idAgendamento: number, agendamento: Agendamento): Observable<Agendamento> {\n    console.log('ID do Agendamento:', idAgendamento);\n    console.log('Objeto Agendamento:', agendamento);\n    return this.http.put<Agendamento>(`${this.apiUrl}/editar-agenda/${idAgendamento}`, agendamento);\n  }\n  \n  excluirAgendamento(idAgendamento: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/deletar-agenda/${idAgendamento}`);\n  }\n\n  getAgendamentoByName(nomeAgendamento: string): Observable<Agendamento> {\n    return this.http.get<Agendamento>(`${this.apiUrl}/nome/${nomeAgendamento}`)\n  }\n\n  getAllAgendamentoIds(): Observable<number[]> {\n    return this.http.get<number[]>(`${this.apiUrl}/ids`);\n  }\n\n  getIdAgendamento(idAgendamento: number): Observable<Agendamento> {\n    return this.http.get<Agendamento>(`${this.apiUrl}/${idAgendamento}`);\n  }\n\n  getPaciente(IdAgenda: number): Observable<Agendamento> {\n    return this.http.get<Agendamento>(`${this.apiUrl}/paciente/${IdAgenda}`);\n  }\n}\n"],"mappings":";;AAMA,MAGaA,kBAAkB;EAG7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADP,KAAAC,MAAM,GAAG,0CAA0C;EAC7B;EAEvCC,oBAAoBA,CAACC,WAAwB,EAAEC,UAA8B;IAC3E,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAc,GAAG,IAAI,CAACJ,MAAM,sBAAsBG,UAAU,EAAE,EAAED,WAAW,CAAC;EACnG;EAEAG,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAgB,GAAG,IAAI,CAACN,MAAM,SAAS,CAAC;EAC9D;EAEAO,oBAAoBA,CAACC,aAAqB,EAAEN,WAAwB;IAClEO,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,aAAa,CAAC;IAChDC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAER,WAAW,CAAC;IAC/C,OAAO,IAAI,CAACH,IAAI,CAACY,GAAG,CAAc,GAAG,IAAI,CAACX,MAAM,kBAAkBQ,aAAa,EAAE,EAAEN,WAAW,CAAC;EACjG;EAEAU,kBAAkBA,CAACJ,aAAqB;IACtC,OAAO,IAAI,CAACT,IAAI,CAACc,MAAM,CAAO,GAAG,IAAI,CAACb,MAAM,mBAAmBQ,aAAa,EAAE,CAAC;EACjF;EAEAM,oBAAoBA,CAACC,eAAuB;IAC1C,OAAO,IAAI,CAAChB,IAAI,CAACO,GAAG,CAAc,GAAG,IAAI,CAACN,MAAM,SAASe,eAAe,EAAE,CAAC;EAC7E;EAEAC,oBAAoBA,CAAA;IAClB,OAAO,IAAI,CAACjB,IAAI,CAACO,GAAG,CAAW,GAAG,IAAI,CAACN,MAAM,MAAM,CAAC;EACtD;EAEAiB,gBAAgBA,CAACT,aAAqB;IACpC,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAc,GAAG,IAAI,CAACN,MAAM,IAAIQ,aAAa,EAAE,CAAC;EACtE;EAEAU,WAAWA,CAACC,QAAgB;IAC1B,OAAO,IAAI,CAACpB,IAAI,CAACO,GAAG,CAAc,GAAG,IAAI,CAACN,MAAM,aAAamB,QAAQ,EAAE,CAAC;EAC1E;;AArCWtB,kBAAkB,C;mBAAlBA,kBAAkB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAlB1B,kBAAkB,C;SAAlBA,kBAAkB;EAAA2B,OAAA,EAAlB3B,kBAAkB,CAAA4B,IAAA;EAAAC,UAAA,EAFjB;AAAM;SAEP7B,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}