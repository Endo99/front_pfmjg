{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ContaService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/contas'; // Substitua pela URL do seu backend\n  }\n\n  listarContas() {\n    return this.http.get(`${this.baseUrl}/listar`);\n  }\n  cadastrarConta(conta) {\n    return this.http.post(`${this.baseUrl}/cadastrar`, conta);\n  }\n  atualizarConta(id, conta) {\n    return this.http.put(`${this.baseUrl}/atualizar/${id}`, conta);\n  }\n  deletarConta(id) {\n    return this.http.delete(`${this.baseUrl}/deletar/${id}`);\n  }\n}\nContaService.ɵfac = function ContaService_Factory(t) {\n  return new (t || ContaService)(i0.ɵɵinject(i1.HttpClient));\n};\nContaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ContaService,\n  factory: ContaService.ɵfac,\n  providedIn: 'root'\n});\nexport { ContaService };","map":{"version":3,"names":["ContaService","constructor","http","baseUrl","listarContas","get","cadastrarConta","conta","post","atualizarConta","id","put","deletarConta","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\welli\\front_pfmjg\\pfmjg\\src\\app\\services\\conta.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Conta } from '../models/conta/conta';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContaService {\n\n  private baseUrl = 'http://localhost:8080/contas'; // Substitua pela URL do seu backend\n\n  constructor(private http: HttpClient) { }\n\n  listarContas(): Observable<Conta[]> {\n    return this.http.get<Conta[]>(`${this.baseUrl}/listar`);\n  }\n\n  cadastrarConta(conta: Conta): Observable<Conta> {\n    return this.http.post<Conta>(`${this.baseUrl}/cadastrar`, conta);\n  }\n\n  atualizarConta(id: number, conta: Conta): Observable<Conta> {\n    return this.http.put<Conta>(`${this.baseUrl}/atualizar/${id}`, conta);\n  }\n\n  deletarConta(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/deletar/${id}`);\n  }\n}\n"],"mappings":";;AAKA,MAGaA,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,8BAA8B,CAAC,CAAC;EAEV;;EAExCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,OAAO,SAAS,CAAC;EACzD;EAEAG,cAAcA,CAACC,KAAY;IACzB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAQ,GAAG,IAAI,CAACL,OAAO,YAAY,EAAEI,KAAK,CAAC;EAClE;EAEAE,cAAcA,CAACC,EAAU,EAAEH,KAAY;IACrC,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAQ,GAAG,IAAI,CAACR,OAAO,cAAcO,EAAE,EAAE,EAAEH,KAAK,CAAC;EACvE;EAEAK,YAAYA,CAACF,EAAU;IACrB,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAO,GAAG,IAAI,CAACV,OAAO,YAAYO,EAAE,EAAE,CAAC;EAChE;;AApBWV,YAAY,C;mBAAZA,YAAY,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZjB,YAAY,C;SAAZA,YAAY;EAAAkB,OAAA,EAAZlB,YAAY,CAAAmB,IAAA;EAAAC,UAAA,EAFX;AAAM;SAEPpB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}